<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
">

    <context:component-scan base-package="com.atguigu"></context:component-scan>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 默认前端控制器默认拦截所有资源（除过jsp），js文件是404；请求js文件的请求是交给tomcat处理-->
    <!--告诉SpringMVC自己映射的请求就自己处理 不能处理的请求直接交给Tomcat -->
    <!-- 静态资源能访问，动态映射请求出错   -->
    <mvc:default-servlet-handler/>
    <!-- 解决动态映射请求出错的问题 SpringMVC可以保证静态请求和动态请求都能访问-->
    <!-- conversionServiceFactoryBean 指定使用自己配置的类型转换组件 -->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

    <!-- 告诉SpringMVC别使用自定义的ConversionService，使用自定义的ConversionService，可能有我们自定义的Converter -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <!-- converters转换器中添加自定义的类型转换器 -->
        <property name="converters">
            <set>
                <bean class="com.atguigu.component.MyStringToEmployeeConverter"></bean>
            </set>
        </property>
    </bean>

</beans>