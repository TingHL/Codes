<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="https://jakarta.ee/xml/ns/jakartaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"
         version="5.0">

    <!-- SpringMVC思想是有一个前端控制器能拦截所有请求，并智能分发
      这个前端控制器是一个servlet，应该在web.xml中配置这个servlet来拦截所有的请求
      -->
    <!-- The front controller of this Spring Web application,responsible for handling all application requests -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!-- contextConfigLocation：指定SpringMVC配置文件位置 -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!-- servlet启动加载，servlet原来是第一次访问创建对象
            load-on-startup:服务器启动的时候创建对象，值越小优先级越高，越先创建对象
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Map all request to the DispatcherServlet for handling   -->
    <!-- /* 和 / 都是拦截所有请求
        /* 的范围更大，还会拦截到*.jsp 这些请求；一旦拦截jsp页面就不能显示
        /：会拦截所有请求，但是不会拦截*.jsp，保证jsp访问正常
       -->
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    
</web-app>