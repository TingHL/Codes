<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
       1.mybatis 可以使用properties来引入外部properties配置文件的内容
       resource：引入类路径下资源
       url：引入网络路径或者磁盘路径下的资源
    -->
    <properties resource="dbconfig.properties"></properties>


    <!-- settings标签包含很多设置项
    setting用来设置每一个设置项
        name 设置项的名字
        value 设置项的取值
    -->
    <settings>
<!--&lt;!&ndash;        <setting name="mapUnderscoreToCamelCase" value="true"/>&ndash;&gt;-->
        <!--    懒加载    -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--        -->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>


    <!-- environments：mybatis可以配置多重环境,default标签指定使用某种环境，达到快速切换
        environment：配置一个具体的环境信息，必须要有transactionManager和dataSource两个标签
            id:代表当前环境的唯一标识
            transactionManager：事务管理器
                type：事务管理器的管理类型 JDBC|MANAGED
                    自定义事务管理器：实现TransactionFactory接口，type指定为全类名
            dataSource:数据源
                type:UNPOOLED|POOLED|JNDI
                     自定义数据源：实现DatasourceFactory接口，type指定为自定义数据源的全类名
        -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!--将写好的sql映射注册到全局配置文件中  -->
    <mappers>
        <!--  mapper：注册一个SQL映射
                    注册配置文件的方式有两种：resource和url
                        resource：引用类路径下的sql映射文件
                        url：引用网络路径或者磁盘路径下的sql映射文件
                    注册借口，class方式
                        class:引用（注册）接口
                        1.有sql映射文件，映射文件名必须与借口同名，并且放在与接口同一目录下
                        2.没有sql映射文件，所有的sql都是利用注解写在接口上
                   推荐：比较重要的Dao接口写sql映射文件，不重要的，简单的Dao借口为了开发快速可以使用注解
         -->

        <!-- 基于xml配置文件   -->
        <mapper resource="EmployeeMapper.xml"/>
        <mapper resource="EmployeeMapperPlus.xml"/>
        <mapper resource="DepartmentMapper.xml"/>
    </mappers>




</configuration>