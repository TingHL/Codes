<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- Spring 管理所有的业务逻辑组件   -->
    <!--  开启注解扫描，处理service和dao，controller不需要Spring框架去处理  -->
    <context:component-scan base-package="com.lth">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- Spring用来控制业务逻辑、数据源、事务控制、aop  -->
    <!-- 配置连接池   -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ssm?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;allowMultiQueries=true"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
    </bean>
    <!-- 配置Spring框架声明式事务管理  -->
    <!-- 配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置事务通知   -->
    <!-- 开启基于注解的事务   -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>
    <!-- 配置AOP增强   -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.lth.service.Impl.*ServiceImpl.*(..))"/>
    </aop:config>


    <!-- 整合mybatis
        1.Spring管理所有组件。mapper的实现类
            service ==> Dao @Autowired：自动注入mapper
        2.spring用来管理事务
    -->
    <!--创建SqlSessionFactory工厂对象-->
    <bean id="sqlSessonFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--  指定全局配置文件路径      -->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
        <!--  指定mapper文件的路径      -->
<!--        <property name="mapperLocations" value=""/>-->
    </bean>
    <!-- 扫描所有的mapper接口的实现，实现mapper自动注入
        指定实现mapper接口的包名。。
         配置IAccountdao接口所在包   -->
    <mybatis-spring:scan base-package="com.lth.dao"></mybatis-spring:scan>

    <!--  mapper扫描配置  -->
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="com.lth.dao"></property>-->
<!--    </bean>-->





</beans>